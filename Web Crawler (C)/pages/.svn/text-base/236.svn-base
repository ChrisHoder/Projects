http://www.cs.dartmouth.edu/~robotics/code/fastest
3
<html>
<head>
<title>Generic trajectory simulator</title>
<style type="text/css">
canvas { 
	border: 1px solid black;
	margin-top: 5px;
	margin-left: 100px;
}
input {
	width:100px;
}
</style>
<link rel="stylesheet" type="text/css" href="jquery/tabs.css" />
<!-- jquery library from googleapis --> 
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.3.2/jquery.min.js"></script> 
<!-- jquery tools. remember to enable gzipping. makes it faster --> 
<script src="jquery/jquery.tools.min.js"></script>

<script type="text/javascript" src="debug_utils.js"></script>
<script type="text/javascript" src="canvas_graph.js"></script>
<script type="text/javascript" src="linear_algebra.js"></script>
<script type="text/javascript" src="trajectory_display.js"></script>
<script type="text/javascript" src="calc_seq.js"></script>
<script type="text/javascript">
var h = Math.sin(Math.PI/3);
var vics = [[0,0, 3], [0, 0, -3], [0.0, -4/3*h, 1], [0.0, -4/3*h, -1], [1, h*2/3, 1], [1, h*2/3, -1], [-1, h*2/3, 1], [-1, h*2/3, -1]];
window.vehicle = 0;
window.simspeed = 100.0;
function changeSpeed(spd)
{
	var ss = document.getElementById("simspeed");
	window.simspeed = spd;
	ss.innerHTML = window.simspeed.toFixed(0);
	if(window.intid){
		window.clearInterval(window.intid);
	}
	window.intid = window.setInterval(stepSim,window.simspeed);
}

function showSeq(pseq)
{
	window.simRunning = true;
	if(window.intid){
		window.clearInterval(window.intid);
	}
	window.intid = window.setInterval(stepSim,window.simspeed);
	var inith = normAngl(Math.PI * parseFloat(document.getElementById("initheta").value) / 180 );
	var iniy = parseFloat(document.getElementById("iniy").value);
	window.td = new TrajectoryDisplay("simcanvas", vics, 0, 0, pseq, -2, iniy, inith);
}

function increaseHeight()
{
	window.worldHeight = Math.floor(window.worldHeight * 1.2 + 1);
	document.getElementById("wheight").innerHTML = window.worldHeight;
	if(!window.simRunning){
		refreshDisplay();
	}
}

function decreaseHeight()
{
	window.worldHeight = Math.floor(window.worldHeight / 1.2);
	document.getElementById("wheight").innerHTML = window.worldHeight;
	if(!window.simRunning){
		refreshDisplay();
	}
}

function showTrajectory()
{
	document.getElementById("wheight").innerHTML = window.worldHeight;
	var inith = normAngl(Math.PI * parseFloat(document.getElementById("initheta").value) / 180 );
	var iniy = parseFloat(document.getElementById("iniy").value);
	var seqlen = parseInt(document.getElementById("seqlen").value);
	var seq = CalculateSequence(vics, inith, iniy, seqlen);
	//var seq = [[3,-1,-0.01], [0, 1, 0.01], [2, 1, 0.01],[1, -1, -0.01]];
	//debug_print('['+seq+']');
	showSeq(seq);
}
function initWindow()
{
	$(function() { 
		// setup ul.tabs to work as tabs for each div directly under div.panes 
		$("ul.tabs").tabs("div.panes > div"); 
	});
	window.worldHeight = 9;
	refreshDisplay();
}

function refreshDisplay()
{
	document.getElementById("wheight").innerHTML = window.worldHeight;
	debug_ics(vics);
	var ss = document.getElementById("simspeed");
	ss.innerHTML = window.simspeed.toFixed(0);
	var inith = normAngl(Math.PI * parseFloat(document.getElementById("initheta").value) / 180 );
	var iniy = parseFloat(document.getElementById("iniy").value);
	var seq = CalculateSequence(vics, inith, iniy, 1);
	seq[0][1] = 0;//Zero length trajectory
	showSeq(seq);
}
function stop()
{
	window.simRunning = false;
	if(window.intid){
		window.clearInterval(window.intid);
	}
}
function stepSim()
{
	window.td.refresh();
}
function selectVehicle(veh)
{
	if(veh == 0){ //Symmetric omniwheeled
		vics = [[0,0, 3], [0, 0, -3], [0.0, -4/3*h, 1], [0.0, -4/3*h, -1], [1, h*2/3, 1], [1, h*2/3, -1], [-1, h*2/3, 1], [-1, h*2/3, -1]];
		window.vehicle = 0;
	}else if(veh == 1){ //RS
		vics = [[0.0, 1, 1], [0.0, 1, -1], [0, -1, 1], [0, -1, -1], [1,0,0], [-1, 0, 0]];
		window.vehicle = 1;
	}else if(veh == 2){ //Dubins
		vics = [[0.0, 1, 1], [0, -1, -1], [1,0,0]];
		window.vehicle = 2;
	}else if(veh == 3){ //Diff drive
		//vics = [[0.0, 0.0, 1], [0, 0.0, -1], [0, 10000, 0.0001],[0, 10000, -0.0001]];
		vics = [[0.0, 0.0, 1], [0, 0.0, -1], [1, 0, 0],[-1, 0, 0]];
		window.vehicle = 3;
	}
	refreshDisplay();
	return false;
}

</script>
</head>
<body onload = "initWindow();">
	<!-- the tabs --> 
<ul class="tabs"> 
<li><a href="#">Trajectory</a></li> 
<li><a href="#">Vehicle design</a></li> 
</ul> 

<!-- tab "panes" --> 
<div class="panes"> 
	<div>
		<br/>
		<span style="margin-left:100px"></span>
		Initial angle (degrees:)<input id = "initheta" value="0" style="width: 3em;" onBlur="refreshDisplay();"/>
		Initial y coordinate: <input id = "iniy" value="0.1" style="width: 5em" onBlur="refreshDisplay();"/>
		Number of segments: <input id = "seqlen" value="5" style="width: 3em"/>
		<a href="javascript:showTrajectory();">Start</a>
		<a href="javascript:stop();">Stop</a>
		<br />
		<span style="margin-left:100px"></span>
		Simulation update delay: <span id="simspeed"></span> ms 
		<a href="javascript:changeSpeed((0.0 + window.simspeed) * 1.5);">Slower</a>
		<a href="javascript:changeSpeed((0.0 + window.simspeed) / 1.5);">Faster</a>
		World height: <span id="wheight"></span> units
		<a href="javascript:decreaseHeight();">Zoom in</a>
		<a href="javascript:increaseHeight();">Zoom out</a>
		<canvas id="simcanvas" width="800" height="600"></canvas>
	</div>
	<div>
		<form>
			<input type="radio" name="veh" checked onclick="javascript:selectVehicle(0);">Symmetric omniwheeled vehicle <br />
			<input type="radio" name="veh" onclick="javascript:selectVehicle(1);">Reeds-Shepp car<br />
			<input type="radio" name="veh" onclick="javascript:selectVehicle(2);">Dubins car<br />
			<input type="radio" name="veh" onclick="javascript:selectVehicle(3);">Differential drive<br />
		</form>
		<div id="debug"> </div>
	</div>
</div>
</body>
</html>

