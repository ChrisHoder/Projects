http://www.cs.dartmouth.edu/~robotics/cs44/index.php/Internet_search_and_multi-robot_mazeworld
3
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15.1" />
		<meta name="keywords" content="Internet search and multi-robot mazeworld" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/~robotics/cs44/opensearch_desc.php" title="cs44 (en)" />
		<link rel="alternate" type="application/rss+xml" title="cs44 RSS Feed" href="/~robotics/cs44/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="cs44 Atom Feed" href="/~robotics/cs44/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>Internet search and multi-robot mazeworld - cs44</title>
		<link rel="stylesheet" href="/~robotics/cs44/skins/common/shared.css?207" type="text/css" media="screen" />
		<link rel="stylesheet" href="/~robotics/cs44/skins/common/commonPrint.css?207" type="text/css" media="print" />
		<link rel="stylesheet" href="/~robotics/cs44/skins/monobook/main.css?207" type="text/css" media="screen" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/~robotics/cs44/skins/monobook/IE50Fixes.css?207" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/~robotics/cs44/skins/monobook/IE55Fixes.css?207" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/~robotics/cs44/skins/monobook/IE60Fixes.css?207" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/~robotics/cs44/skins/monobook/IE70Fixes.css?207" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/~robotics/cs44/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=18000&amp;action=raw&amp;maxage=18000" type="text/css" />
		<link rel="stylesheet" href="/~robotics/cs44/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=18000&amp;action=raw&amp;maxage=18000" type="text/css" media="print" />
		<link rel="stylesheet" href="/~robotics/cs44/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=18000&amp;action=raw&amp;maxage=18000" type="text/css" />
		<link rel="stylesheet" href="/~robotics/cs44/index.php?title=-&amp;action=raw&amp;maxage=18000&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/~robotics/cs44/skins/common/IEFixes.js?207"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/~robotics/cs44/skins";
		var wgArticlePath = "/~robotics/cs44/index.php/$1";
		var wgScriptPath = "/~robotics/cs44";
		var wgScript = "/~robotics/cs44/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://www.cs.dartmouth.edu";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Internet_search_and_multi-robot_mazeworld";
		var wgTitle = "Internet search and multi-robot mazeworld";
		var wgAction = "view";
		var wgArticleId = "12";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 203;
		var wgVersion = "1.15.1";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</script>

		<script type="text/javascript" src="/~robotics/cs44/skins/common/wikibits.js?207"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/~robotics/cs44/skins/common/ajax.js?207"></script>
		<script type="text/javascript" src="/~robotics/cs44/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-Internet_search_and_multi-robot_mazeworld skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
				<h1 id="firstHeading" class="firstHeading">Internet search and multi-robot mazeworld</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From cs44</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<p>Due January 27 at 2 pm.
</p>
<table id="toc" class="toc" summary="Contents"><tr><td><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1"><a href="#Problem_1"><span class="tocnumber">1</span> <span class="toctext">Problem 1</span></a></li>
<li class="toclevel-1"><a href="#Problem_2"><span class="tocnumber">2</span> <span class="toctext">Problem 2</span></a></li>
<li class="toclevel-1"><a href="#Problem_3"><span class="tocnumber">3</span> <span class="toctext">Problem 3</span></a></li>
<li class="toclevel-1"><a href="#Extra_credit"><span class="tocnumber">4</span> <span class="toctext">Extra credit</span></a></li>
</ul>
</td></tr></table><script type="text/javascript"> if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } </script>
<a name="Problem_1" id="Problem_1"></a><h2> <span class="mw-headline">Problem 1</span></h2>
<p>(Based on 3.19 from R &amp; N).  Write a program that will take as input two web page urls and find a path of links from one to another. What is an appropriate search strategy? 
</p><p><span style="color:red"> Very important! </span>  To ensure that your program does not create a denial-of-service attack, you are <b>required</b> to add a .2 second delay each time you read a website.  In Java you can use the Thread.sleep(200) method. 
</p><p>Apply your algorithm to a few cases where the two web pages are "close"; i.e, the path from the start to the goal is short, maybe 3-5 pages long.  Report the paths returned, and give an estimate of the (wall-clock) time used for each case.
</p>
<a name="Problem_2" id="Problem_2"></a><h2> <span class="mw-headline">Problem 2</span></h2>
<p>k robots live in an n x n rectangular maze.  The coordinates of each robot are (x_i, y_i), and each coordinate is an integer in the range 0...n-1.  For example, maybe the maze looks like this:
</p>
<pre>
. B . . . . .
. # # . C . .
. . # # . . . 
. . . . # . .
. . # # . . .
. . # . . . . 
A . . . # # .
</pre>
<p>That's three robots A, B, C in a 7x7 maze, with asterisks representing walls, and periods representing free spaces, in the venerable tradition of ascii art in <a href="http://en.wikipedia.org/wiki/Roguelike" class="external text" title="http://en.wikipedia.org/wiki/Roguelike" rel="nofollow">rogue-like games</a>.  
</p><p>You'd like to get the robots to another configuration.  For example:
</p>
<pre>
. . . . . . .
. # # . . . .
. . # # . . . 
. . . . # . .
. . # # . . B
. . # . . . A 
. . . . # # C
</pre>
<p>There are some rules.  The robots only move in four directions, north, south, east, and west.  The robots only move one square at a time.  Only one robot may occupy one square at a time -- but a robot <b>can</b> move into a square as another robot vacates it.  You are given a map ahead of time, and it will not change during the course of the game.
</p><p>a)  If there are k robots, how would you represent the state of the system?  
</p><p>b)  Give an upper bound on the number of states in the system, in terms of n, and k.  
</p><p>c)  Give a rough estimate on how many of these states are "bad" if the number of wall squares is w, and n is much larger than k.
</p><p>d)  If there are not many walls, n is large (say 100x100), and several robots (say 10), do you expect a straightforwards breadth-first search on the state space to be effective in all cases?  Why or why not?
</p><p>e)  Describe a useful, optimistic heuristic function for this search space.  Show that your heuristic is optimistic.
</p><p>f)  Implement an A* search algorithm that takes as input a map, a start state, and a goal state, and plans an optimal or near-optimal collision-free path (for every robot!) from start to goal.  There are two obvious choices of cost function you might use to define "optimal".  One would be the number of steps taken by the robot that is last to reach the goal -- the total time of the plan.  Another would be the sum of the steps for all robots -- the total fuel use of the robots. 
</p><p>It may seem that you can just plan paths for the robots independently, but this approach won't work very well if the robots get close to one another or have to move around one another.  Therefore, you should plan paths in the complete state space for the system.     
</p><p>Use ASCII drawings of the maze to show each time step as the robots move towards their goals.  You may hard-code mazes. 
</p><p>I'll give you some freedom as to how you implement a solution.  The state space is large, and you could make different simplifying assumptions, at the cost of optimality.  For example, I recommend you assume that the robots always move in the same order (robot a, then b, then c) -- but recognize that in this case you might need a "do_nothing" action for each robot.  I also recommend that you assume robots can't swap spaces.  Describe in words the assumptions you made, why you made them, and the effect on the types of plans that you get.
</p><p>g) Test your program on mazes with between one and three robots, of sizes varying from 5x5 to 40x40.  (You might want to randomly generate the 40x40 mazes.)  I'll leave it up to you to devise some cool examples -- but give me at least five and describe why they are interesting.  (For example, what if the robots were in some sort of corridor, in the "wrong" order, and had to do something tricky to reverse their order?)
</p><p>h)  Describe why the 8-puzzle in the book is a special case of this problem.  Is the heuristic function you chose a good one for the 8-puzzle?  
</p><p>i)  The state space of the 8-puzzle is made of two disjoint sets.  Describe how you would modify your program to prove this.  (You do not have to implement this.)
</p>
<a name="Problem_3" id="Problem_3"></a><h2> <span class="mw-headline">Problem 3 </span></h2>
<p>Assume that you now only have a single robot in mazeworld, but there's a catch.  The robot is blind, and doesn't know where it starts! The robot does know the map of the maze.
</p><p>If you execute the action "west" from a configuration where "west" is blocked, the robot simply doesn't move. In this problem, you will write a planning algorithm that gives a plan that even the blind robot can follow. Write an algorithm that causes the robot to go to the goal no matter where it starts. Specifically, let the 'state' in the search be the current set of possible locations of the robot. For example, in a 4x3 maze, the first state in the search will be the set of all 12 possible starting locations: { (0, 0), (1, 0), (2, 0), ... (3,2) }. The actions will be {north, south, east, west}. The goal state might be the singleton set {(2, 0)}.
</p><p>Sometimes people ask questions like "can the robot tell the difference between a wall and the edge of the maze?"  No.  The robot can't even tell that it hit something.  All we know is that if you ask the robot to go west, it will either go west one square (if there is no wall there) or not (if there is a wall there).  The robot doesn't know which happened.  
</p><p>Hint. How does the successor function work? Take an example. Assume the current state is {(3, 0), (3, 1), (3, 2)}, which means the robot knows that it has x coordinate 3, but isn't sure about the y coordinate. Consider the action "north". If the location was initially (3, 0), then the location is (3, 1). If the location was initially (3, 1), then the location is (3, 2). If the location as (3, 2), then the new location is (3, 2), since the robot bumps into the north wall. So the new state is the set { (3, 1), (3, 2) }. In other words, the robot is now more sure of its location, even though it has no sensors.
</p>
<a name="Extra_credit" id="Extra_credit"></a><h2> <span class="mw-headline"> Extra credit</span></h2>
<p>Prove that a sensorless plan of the type you found in problem 3 <b>always</b> exists, as long as the size of the maze is finite and the goal is in the same connected component of the maze as the start.  Could you use this proof to generate a motion planner that runs in time that is linear or polynomial in the number of cells in the maze?  (Notice that the size of the belief space is exponential in the number of cells, so this would be a very interesting result!)
</p>
<!-- 
NewPP limit report
Preprocessor node count: 12/1000000
Post-expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Expensive parser function count: 0/100
-->

<!-- Saved in parser cache with key robo_wiki-cs44_:pcache:idhash:12-0!1!0!!en!2!edit=0 and timestamp 20110220223152 -->
<div class="printfooter">
Retrieved from "<a href="http://www.cs.dartmouth.edu/~robotics/cs44/index.php/Internet_search_and_multi-robot_mazeworld">http://www.cs.dartmouth.edu/~robotics/cs44/index.php/Internet_search_and_multi-robot_mazeworld</a>"</div>
						<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/~robotics/cs44/index.php/Internet_search_and_multi-robot_mazeworld" title="View the content page [c]" accesskey="c">Page</a></li>
				 <li id="ca-talk" class="new"><a href="/~robotics/cs44/index.php?title=Talk:Internet_search_and_multi-robot_mazeworld&amp;action=edit&amp;redlink=1" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-viewsource"><a href="/~robotics/cs44/index.php?title=Internet_search_and_multi-robot_mazeworld&amp;action=edit" title="This page is protected.&#10;You can view its source [e]" accesskey="e">View source</a></li>
				 <li id="ca-history"><a href="/~robotics/cs44/index.php?title=Internet_search_and_multi-robot_mazeworld&amp;action=history" title="Past revisions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/~robotics/cs44/index.php?title=Special:UserLogin&amp;returnto=Internet_search_and_multi-robot_mazeworld" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o">Log in</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://www.cs.dartmouth.edu/~robotics/brain.png);" href="/~robotics/cs44/index.php/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-About-the-course"><a href="/~robotics/cs44/index.php/Main_Page">About the course</a></li>
				<li id="n-Schedule"><a href="/~robotics/cs44/index.php/Schedule">Schedule</a></li>
				<li id="n-BFS-code-fragment"><a href="/~robotics/cs44/index.php/Bfsnotes">BFS code fragment</a></li>
				<li id="n-Cool-AI-links"><a href="/~robotics/cs44/index.php/Cool_AI_links">Cool AI links</a></li>
			</ul>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-assignments'>
		<h5>assignments</h5>
		<div class='pBody'>
			<ul>
				<li id="n-Assignment-.231"><a href="/~robotics/cs44/index.php/Missionaries_and_Cannibals">Assignment #1</a></li>
				<li id="n-Assignment-.232"><a href="/~robotics/cs44/index.php/Internet_search_and_multi-robot_mazeworld">Assignment #2</a></li>
				<li id="n-Assignment-.233"><a href="/~robotics/cs44/index.php/Connect_four">Assignment #3</a></li>
				<li id="n-Assignment-.234"><a href="/~robotics/cs44/index.php/Circuit-board_layout">Assignment #4</a></li>
				<li id="n-Assignment-.235"><a href="/~robotics/cs44/index.php/Viterbi_algorithm">Assignment #5</a></li>
			</ul>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-Lecture_outlines'>
		<h5>Lecture outlines</h5>
		<div class='pBody'>
			<ul>
				<li id="n-Lecture-2"><a href="/~robotics/cs44/index.php/Lecture_2">Lecture 2</a></li>
				<li id="n-Lecture-3"><a href="/~robotics/cs44/index.php/Lecture_3">Lecture 3</a></li>
				<li id="n-Lecture-4"><a href="/~robotics/cs44/index.php/Lecture_4">Lecture 4</a></li>
				<li id="n-Lecture-5"><a href="/~robotics/cs44/index.php/Lecture_5">Lecture 5</a></li>
				<li id="n-Lecture-6"><a href="/~robotics/cs44/index.php/Lecture_6">Lecture 6</a></li>
				<li id="n-Lecture-7"><a href="/~robotics/cs44/index.php/Lecture_7">Lecture 7</a></li>
				<li id="n-Lecture-8"><a href="/~robotics/cs44/index.php/Lecture_8">Lecture 8</a></li>
				<li id="n-Lecture-9"><a href="/~robotics/cs44/index.php/Lecture_9">Lecture 9</a></li>
				<li id="n-10:-CSP.27s"><a href="/~robotics/cs44/index.php/Lecture_10">10: CSP's</a></li>
				<li id="n-11:-Solving-CPS.27s"><a href="/~robotics/cs44/index.php/Lecture_11">11: Solving CPS's</a></li>
				<li id="n-12:-Prop-logic"><a href="/~robotics/cs44/index.php/Lecture_12">12: Prop logic</a></li>
				<li id="n-13:-Resolution"><a href="/~robotics/cs44/index.php/Lecture_13">13: Resolution</a></li>
				<li id="n-14:-SAT-problems"><a href="/~robotics/cs44/index.php/Lecture_14">14: SAT problems</a></li>
				<li id="n-22:-Viterbi.2C-HMMs"><a href="/~robotics/cs44/index.php/Lecture_22">22: Viterbi, HMMs</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/~robotics/cs44/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search cs44 [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search the pages for this text" />
			</div></form>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/~robotics/cs44/index.php/Special:WhatLinksHere/Internet_search_and_multi-robot_mazeworld" title="List of all wiki pages that link here [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/~robotics/cs44/index.php/Special:RecentChangesLinked/Internet_search_and_multi-robot_mazeworld" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-specialpages"><a href="/~robotics/cs44/index.php/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/~robotics/cs44/index.php?title=Internet_search_and_multi-robot_mazeworld&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/~robotics/cs44/index.php?title=Internet_search_and_multi-robot_mazeworld&amp;oldid=203" title="Permanent link to this revision of the page">Permanent link</a></li>			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/~robotics/cs44/skins/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 28 January 2010, at 13:20.</li>
					<li id="viewcount">This page has been accessed 1,997 times.</li>
					<li id="privacy"><a href="/~robotics/cs44/index.php/cs44:Privacy_policy" title="cs44:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/~robotics/cs44/index.php/cs44:About" title="cs44:About">About cs44</a></li>
					<li id="disclaimer"><a href="/~robotics/cs44/index.php/cs44:General_disclaimer" title="cs44:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served in 0.206 secs. --></body></html>
