% FILE: plotData.m
% DATE: 9/16/2012
% AUTHOR: Chris Hoder
% CLASS: ENGS 91
% ASSIGNMENT: 1

% This script can be used to tabulate and plot both parts a) and b) for
% laboratory 1.

%% get data by going in the forward direction with the Bessel recursion 
%  relation

%clear old variables
clear

%got to n=30
nMax = 30;
n=0:1:nMax;
% get the data for x = 1 using the input IC's given on handout
forward1 = BesselCalcForward(1,nMax,7.6519e-01,4.4005e-01);
% get the data for x = 15 using the input IC's given on handout
forward15 = BesselCalcForward(15,nMax,-1.4224e-02,2.0510e-01);
% get the data for x = 50 using the input IC's given on handout
forward50 = BesselCalcForward(50,nMax,5.5812e-02,-9.7511e-02);

%tabulate data to a variable
dataForward = [forward1(:,1) forward1(:,3) forward15(:,3) forward50(:,3)];

% plot the data on one figure using the subplot method with absoulte
% errors in the left column and relative errors in the right column. The
% rows will correspond to x=1, 15 and 50 respectively.

subplot(3,2,1);
semilogy(n,forward1(:,4));
xlabel('n value')
ylabel('Absolute Error');
title('Absolute error as a function of n for J_n(1)')

subplot(3,2,2);
semilogy(n,forward1(:,5));
xlabel('n value')
ylabel('Relative Error');
title('Relative error as a function of n for J_n(1)')

subplot(3,2,3);
semilogy(n,forward15(:,4));
xlabel('n value')
ylabel('Absolute Error');
title('Absolute error as a function of n for J_n(15)')

subplot(3,2,4);
semilogy(n,forward15(:,5));
xlabel('n value')
ylabel('Relative Error');
title('Relative error as a function of n for J_n(15)')

subplot(3,2,5);
semilogy(n,forward50(:,4));
xlabel('n value')
ylabel('Absolute Error');
title('Absolute error as a function of n for J_n(50)')

subplot(3,2,6);
semilogy(n,forward50(:,5));
xlabel('n value')
ylabel('Relative Error');
title('Relative error as a function of n for J_n(50)')


%% get data by going backward when using the Bessel recursion relation

%clear old variables
clear;
nMax = 30;
n=0:1:nMax;

% get the data for x = 1 using the input IC's given on handout
backward1 = BesselCalcBackward(1,30,3.4828e-42,2.0891e-40);
% get the data for x = 1 using the input IC's given on handout
backward15 = BesselCalcBackward(15,30,1.0374e-07,3.8828e-07);
% get the data for x = 1 using the input IC's given on handout
backward50 = BesselCalcBackward(50,30,4.84343e-02,1.2151e-01);

%tabulate data to a variable
dataBackward = [backward1(:,1) backward1(:,3) backward15(:,3) backward50(:,3)];

% plot the data on one figure using the subplot method with absoulte
% errors in the left column and relative errors in the right column. The
% rows will correspond to x=1, 15 and 50 respectively.

subplot(3,2,1);
semilogy(n,backward1(:,4));
set(gca,'xdir','reverse');
xlabel('n value')
ylabel('Absolute Error');
title('Absolute error as a function of n for J_n(1)')

subplot(3,2,2);
semilogy(n,backward1(:,5));
set(gca,'xdir','reverse');
xlabel('n value')
ylabel('Relative Error');
title('Relative error as a function of n for J_n(1)')

subplot(3,2,3);
semilogy(n,backward15(:,4));
set(gca,'xdir','reverse');
xlabel('n value');
ylabel('Absolute Error');
title('Absolute error as a function of n for J_n(15)')

subplot(3,2,4);
semilogy(n,backward15(:,5));
set(gca,'xdir','reverse');
xlabel('n value')
ylabel('Relative Error');
title('Relative error as a function of n for J_n(15)')

subplot(3,2,5);
semilogy(n,backward50(:,4));
set(gca,'xdir','reverse');
xlabel('n value')
ylabel('Absolute Error');
title('Absolute error as a function of n for J_n(50)')

subplot(3,2,6);
semilogy(n,backward50(:,5));
set(gca,'xdir','reverse');
xlabel('n value')
ylabel('Relative Error');
title('Relative error as a function of n for J_n(50)')
